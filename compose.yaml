services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    networks:
      - rest
    ports:
      - '5430:5432'
  rest-mvc:
    image: 'docker-rest-mvc:latest'
    build:
      context: .
    ports:
      - '8080:8080'
    networks:
      - rest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  osd:
    image: 'scality/s3server:latest'
    environment:
      - ACCESS_KEY=accessKey
      - SECRET_KEY=secretKey
      - STORAGE_TYPE=aws_s3
    ports:
      - '5000:8000'
    networks:
      - storage
  storage-api:
    image: 'docker-storage-api:latest'
    build:
      context: .
    ports:
      - '4343:4343'
    networks:
      - storage
    depends_on:
      - osd
      - kafka

networks:
  rest:
  storage:
